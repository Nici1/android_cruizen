// Generated by view binder compiler. Do not edit!
package org.pytorch.demo.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.pytorch.demo.objectdetection.R;

public final class TextureViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomBar;

  @NonNull
  public final Button cameraButton;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final Button mapButton;

  @NonNull
  public final TextureView objectDetectionTextureView;

  private TextureViewBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout bottomBar,
      @NonNull Button cameraButton, @NonNull Button loginButton, @NonNull Button mapButton,
      @NonNull TextureView objectDetectionTextureView) {
    this.rootView = rootView;
    this.bottomBar = bottomBar;
    this.cameraButton = cameraButton;
    this.loginButton = loginButton;
    this.mapButton = mapButton;
    this.objectDetectionTextureView = objectDetectionTextureView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TextureViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TextureViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.texture_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TextureViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_bar;
      LinearLayout bottomBar = rootView.findViewById(id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.camera_button;
      Button cameraButton = rootView.findViewById(id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.login_button;
      Button loginButton = rootView.findViewById(id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.map_button;
      Button mapButton = rootView.findViewById(id);
      if (mapButton == null) {
        break missingId;
      }

      id = R.id.object_detection_texture_view;
      TextureView objectDetectionTextureView = rootView.findViewById(id);
      if (objectDetectionTextureView == null) {
        break missingId;
      }

      return new TextureViewBinding((RelativeLayout) rootView, bottomBar, cameraButton, loginButton,
          mapButton, objectDetectionTextureView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
